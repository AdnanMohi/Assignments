{"version":3,"file":"899.5aa2bebf8593b15cefba.js","mappings":"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,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,KAAK,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,KACnzEC,eAAgB,CAAC,EAAE,CAAC,EAAE,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","sources":["webpack://mosaicProviderJobcards/./node_modules/@indeed/indeed-gettext/index.js","webpack://mosaicProviderJobcards/./node_modules/@indeed/indeed-gettext/src/Gettext.js","webpack://mosaicProviderJobcards/./node_modules/@indeed/indeed-gettext/src/GettextWrapper.js","webpack://mosaicProviderJobcards/./node_modules/@indeed/indeed-gettext/src/JedPluralForms.js","webpack://mosaicProviderJobcards/./node_modules/@indeed/indeed-gettext/src/ListFormat.js","webpack://mosaicProviderJobcards/./node_modules/@indeed/indeed-gettext/src/Substitution.js"],"sourcesContent":["module.exports = require('./src/GettextWrapper');\n","/* eslint-disable camelcase,no-loops/no-loops,max-depth,no-nested-ternary,no-new-func,max-params,no-cond-assign,no-constant-condition */\n/**\n * @fileoverview A modified version of the jsgettext library.\n *\n * Copied from http://cvs.berlios.de/cgi-bin/viewcvs.cgi/jsgettext/jsgettext/lib/Gettext.js?revision=1.16 (broken link)\n * The project can be found at http://jsgettext.sourceforge.net/doc/html/Gettext.html\n *\n * Translation data is supplied as a JavaScript object. The format is not well documented, but it's similar to\n * jed format (http://messageformat.github.io/Jed/). One main difference is that plural and singular are reversed.\n *\n * One of the major Indeed modifications is that instead of using english strings as message ids, we save space by\n * using a hash of the english string. GettextBase handles hashing transparently, so the API still takes\n * english strings as input.\n *\n * @suppress {checkVars|checkTypes}\n */\n\n/*\n Pure Javascript implementation of Uniforum message translation.\n Copyright (C) 2008 Joshua I. Miller <unrtst@cpan.org>, all rights reserved\n\n This program is free software; you can redistribute it and/or modify it\n under the terms of the GNU Library General Public License as published\n by the Free Software Foundation; either version 2, or (at your option)\n any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Library General Public License for more details.\n\n You should have received a copy of the GNU Library General Public\n License along with this program; if not, write to the Free Software\n Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n USA.\n */\n\nfunction stringhash(str, salt) {\n    var hash = salt;\n    var i = str.length;\n\n    while (i) {\n        hash = (hash * 33) ^ str.charCodeAt(--i);\n    }\n\n    // JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n    // integers. Since we want the results to be always positive, convert the\n    // signed int to an unsigned by doing an unsigned bit shift.\n    return hash >>> 0;\n}\n\nvar Jed = require('./JedPluralForms');\n\nvar DefaultLogger = function() {\n    this.error = function() {\n        // Intentionally blank, don't emit logs if using this logger\n    };\n};\n\n/**\n * @param args - Paramater object containing arguments to gettext. Valid parameters:\n *                * domain - effectively a \"namespace\" to use for translations\n *                * locale_data - the actual translation data to use for this instance of gettext\n *                * logger - { error: (string) => void } object that will be called when a translation is not present\n * @constructor\n */\nvar Gettext = function(args) {\n    this.domain = 'messages';\n    this.input_locale_data = undefined; // eslint-disable-line no-undefined\n    this.locale_data = {};\n\n    // set options\n    var options = ['domain', 'locale_data', 'logger'];\n    var validatedOptions = {};\n    if (this.isValidObject(args)) {\n        for (var i in args) {\n            for (var j = 0; j < options.length; j++) {\n                if (i === options[j]) {\n                    // don't set it if it's null or undefined\n                    if (this.isValidObject(args[i])) validatedOptions[i] = args[i];\n                }\n            }\n        }\n    }\n\n    // Translate all valid options over into the compiled namespace\n    if (validatedOptions.domain) {\n        this.domain = validatedOptions.domain;\n    }\n    if (validatedOptions.locale_data) {\n        this.input_locale_data = validatedOptions.locale_data;\n    }\n\n    this.logger = validatedOptions.logger || new DefaultLogger();\n\n    this.try_parse_locale_data();\n\n    return this;\n};\n\nGettext.context_glue = '\\u0004';\n\nGettext.prototype.try_parse_locale_data = function() {\n    // check to see if language is statically included\n    if (typeof this.input_locale_data !== 'undefined') {\n        // we're going to reformat it, and overwrite the variable\n        this.parse_locale_data(JSON.parse(JSON.stringify(this.input_locale_data)));\n    }\n};\n\n// This takes the bin/po2json'd data, and moves it into an internal form\n// for use in our lib, and puts it in our object as:\n//  this._locale_data = {\n//      domain : {\n//          head : { headfield : headvalue },\n//          msgs : {\n//              msgid : [ msgstr, msgstr_plural ],\n//          },\n// eslint-disable-next-line complexity\nGettext.prototype.parse_locale_data = function(locale_data) {\n    if (typeof this.locale_data === 'undefined') {\n        this.locale_data = {};\n    }\n\n    // suck in every domain defined in the supplied data\n    for (var domain in locale_data) {\n        // skip empty specs (flexibly)\n        if (!locale_data.hasOwnProperty(domain) || !this.isValidObject(locale_data[domain]))\n            continue;\n        // skip if it has no msgid's\n        var has_msgids = false;\n        // eslint-disable-next-line no-unused-vars\n        for (var msgid in locale_data[domain]) {\n            has_msgids = true;\n            break;\n        }\n        if (!has_msgids) continue;\n\n        // grab shortcut to data\n        var data = locale_data[domain];\n\n        // if they specify a blank domain, default to \"messages\"\n        if (domain === '') {\n            domain = 'messages';\n        }\n        // init the data structure\n        if (!this.isValidObject(this.locale_data[domain])) this.locale_data[domain] = {};\n        if (!this.isValidObject(this.locale_data[domain].head)) this.locale_data[domain].head = {};\n        if (!this.isValidObject(this.locale_data[domain].msgs)) this.locale_data[domain].msgs = {};\n\n        var optimized_format = false;\n        if (data.hasOwnProperty('') && data[''].hasOwnProperty('salt')) {\n            optimized_format = true;\n        }\n\n        for (var message_id in data) {\n            if (data.hasOwnProperty(message_id)) {\n                if (message_id === '') {\n                    // The empty string is treated as header data instead of as a regular message\n                    var header = data[message_id];\n                    for (var head in header) {\n                        if (header.hasOwnProperty(head)) {\n                            var h = head.toLowerCase();\n                            this.locale_data[domain].head[h] = header[head];\n                        }\n                    }\n                } else {\n                    if (\n                        optimized_format &&\n                        (data[message_id].length === 0 || data[message_id][0] !== null)\n                    ) {\n                        // Add a dummy msgid_plural\n                        // This value is never used, but the unoptimized format includes it\n                        // TODO: remove this line once backwards compatibility with the unoptimized format is not needed\n                        this.locale_data[domain].msgs[message_id] = [null].concat(data[message_id]);\n                    } else {\n                        this.locale_data[domain].msgs[message_id] = data[message_id];\n                    }\n                }\n            }\n        }\n    }\n\n    // build the plural forms function\n    // eslint-disable-next-line no-redeclare\n    for (var domain in this.locale_data) {\n        if (\n            this.isValidObject(this.locale_data[domain].head['plural-forms']) &&\n            typeof this.locale_data[domain].head.plural_func === 'undefined'\n        ) {\n            // untaint data\n            var plural_forms = this.locale_data[domain].head['plural-forms'];\n            // eslint-disable-next-line no-useless-escape\n            var pf_re = new RegExp(\n                '^(\\\\s*nplurals\\\\s*=\\\\s*[0-9]+\\\\s*;\\\\s*plural\\\\s*=\\\\s*(?:\\\\s|[-\\\\?\\\\|&=!<>+*/%:;a-zA-Z0-9_()])+)',\n                'm'\n            );\n            if (pf_re.test(plural_forms)) {\n                //ex english: \"Plural-Forms: nplurals=2; plural=(n != 1);\\n\"\n                //pf = \"nplurals=2; plural=(n != 1);\";\n                //ex russian: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10< =4 && (n%100<10 or n%100>=20) ? 1 : 2)\n                //pf = \"nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2)\";\n\n                var pf = this.locale_data[domain].head['plural-forms'];\n                if (!/;\\s*$/.test(pf)) pf = pf.concat(';');\n                this.locale_data[domain].head.plural_func = Jed.PF.compile(pf);\n            } else {\n                throw new Error(\n                    'Syntax error in language file. Plural-Forms header is invalid [' +\n                        plural_forms +\n                        ']'\n                );\n            }\n\n            // default to english plural form\n        } else if (typeof this.locale_data[domain].head.plural_func === 'undefined') {\n            this.locale_data[domain].head.plural_func = Jed.PF.compile(\n                'nplurals=2; plural=n != 1;'\n            );\n        } // else, plural_func already created\n    }\n};\n\n// gettext\nGettext.prototype.gettext = function(msgid) {\n    var msgctxt;\n    var msgid_plural;\n    var n;\n    var category;\n\n    return this.dcnpgettext(null, msgctxt, msgid, msgid_plural, n, category);\n};\n\nGettext.prototype.dgettext = function(domain, msgid) {\n    var msgctxt;\n    var msgid_plural;\n    var n;\n    var category;\n\n    return this.dcnpgettext(domain, msgctxt, msgid, msgid_plural, n, category);\n};\n\nGettext.prototype.dcgettext = function(domain, msgid, category) {\n    var msgctxt;\n    var msgid_plural;\n    var n;\n\n    return this.dcnpgettext(domain, msgctxt, msgid, msgid_plural, n, category);\n};\n\n// ngettext\nGettext.prototype.ngettext = function(msgid, msgid_plural, n) {\n    var msgctxt;\n    var category;\n\n    return this.dcnpgettext(null, msgctxt, msgid, msgid_plural, n, category);\n};\n\nGettext.prototype.dngettext = function(domain, msgid, msgid_plural, n) {\n    var msgctxt;\n    var category;\n\n    return this.dcnpgettext(domain, msgctxt, msgid, msgid_plural, n, category);\n};\n\nGettext.prototype.dcngettext = function(domain, msgid, msgid_plural, n, category) {\n    var msgctxt;\n\n    return this.dcnpgettext(domain, msgctxt, msgid, msgid_plural, n, category, category);\n};\n\n// pgettext\nGettext.prototype.pgettext = function(msgctxt, msgid) {\n    var msgid_plural;\n    var n;\n    var category;\n\n    return this.dcnpgettext(null, msgctxt, msgid, msgid_plural, n, category);\n};\n\nGettext.prototype.dpgettext = function(domain, msgctxt, msgid) {\n    var msgid_plural;\n    var n;\n    var category;\n\n    return this.dcnpgettext(domain, msgctxt, msgid, msgid_plural, n, category);\n};\n\nGettext.prototype.dcpgettext = function(domain, msgctxt, msgid, category) {\n    var msgid_plural;\n    var n;\n\n    return this.dcnpgettext(domain, msgctxt, msgid, msgid_plural, n, category);\n};\n\n// npgettext\nGettext.prototype.npgettext = function(msgctxt, msgid, msgid_plural, n) {\n    var category;\n\n    return this.dcnpgettext(null, msgctxt, msgid, msgid_plural, n, category);\n};\n\nGettext.prototype.dnpgettext = function(domain, msgctxt, msgid, msgid_plural, n) {\n    var category;\n\n    return this.dcnpgettext(domain, msgctxt, msgid, msgid_plural, n, category);\n};\n\n/**\n * Translation function which handles all possible options.\n * All of the other translation functions are wrappers around this method.\n *\n * @param {string} domain\n * @param {string} msgctxt\n * @param {string} msgid\n * @param {string} msgid_plural\n * @param {number} n\n * @param category - Deprecated - This option is ignored.\n * @returns {string} The translated message, or the original message if no translation exists.\n */\n// eslint-disable-next-line no-unused-vars, complexity\nGettext.prototype.dcnpgettext = function(domain, msgctxt, msgid, msgid_plural, n, category) {\n    if (!this.isValidObject(msgid)) {\n        return '';\n    }\n\n    var english_message = msgid;\n    var english_message_plural;\n    var plural = this.isValidObject(msgid_plural);\n    if (plural) {\n        english_message_plural = msgid_plural;\n    }\n\n    var domainname = this.isValidObject(domain)\n        ? domain\n        : this.isValidObject(this.domain)\n        ? this.domain\n        : 'messages';\n\n    var locale_data = [];\n    if (\n        typeof this.locale_data !== 'undefined' &&\n        this.isValidObject(this.locale_data[domainname])\n    ) {\n        locale_data.push(this.locale_data[domainname]);\n    } else if (typeof this.locale_data !== 'undefined') {\n        // didn't find domain we're looking for. Search all of them.\n        for (var dom in this.locale_data) {\n            locale_data.push(this.locale_data[dom]);\n        }\n    }\n\n    var trans = [];\n    var found = false;\n    var domain_used; // so we can find plural-forms if needed\n    if (locale_data.length) {\n        for (var i = 0; i < locale_data.length; i++) {\n            var locale = locale_data[i];\n\n            var message_hash = this.isValidObject(msgctxt)\n                ? msgctxt + Gettext.context_glue + msgid\n                : msgid;\n            if (locale.head.hasOwnProperty('salt')) {\n                // To save space, translation data is stored using a hash of the message id instead of the raw english string.\n                message_hash = stringhash(message_hash, locale.head.salt);\n                if (locale.head.hasOwnProperty('id_length')) {\n                    message_hash = String(message_hash).substring(0, locale.head.id_length);\n                }\n            }\n            if (this.isValidObject(locale.msgs[message_hash])) {\n                // TODO: remove the call to .slice(1) once backwards compatibility with the unoptimized format is not needed\n                trans = locale.msgs[message_hash].slice(1); // throw away the msgid_plural\n                domain_used = locale;\n                found = true;\n                // only break if found translation actually has a translation.\n                if (trans.length > 0 && trans[0].length !== 0) break;\n            }\n        }\n    }\n\n    // default to english if we lack a match, or match has zero length\n    if (trans.length === 0 || trans[0].length === 0) {\n        this.logger.error('msgid=\"' + english_message + '\" was not present');\n        trans = [english_message, english_message_plural];\n    }\n\n    var translation = trans[0];\n    if (plural) {\n        var p;\n        if (found && this.isValidObject(domain_used.head.plural_func)) {\n            p = domain_used.head.plural_func(n);\n        } else {\n            p = n !== 1 ? 1 : 0;\n        }\n        if (this.isValidObject(trans[p])) translation = trans[p];\n    }\n\n    return translation;\n};\n\n/* utility method, since javascript lacks a printf */\nGettext.strargs = function(str, args) {\n    // make sure args is an array\n    if (args === null || typeof args === 'undefined') {\n        args = [];\n    } else if (args.constructor !== Array) {\n        args = [args];\n    }\n\n    // NOTE: javascript lacks support for zero length negative look-behind\n    // in regex, so we must step through w/ index.\n    // The perl equiv would simply be:\n    //    $string =~ s/(?<!\\%)\\%([0-9]+)/$args[$1]/g;\n    //    $string =~ s/\\%\\%/\\%/g; # restore escaped percent signs\n\n    var newstr = '';\n    while (true) {\n        var i = str.indexOf('%');\n        var match_n;\n\n        // no more found. Append whatever remains\n        if (i === -1) {\n            newstr += str;\n            break;\n        }\n\n        // we found it, append everything up to that\n        newstr += str.substr(0, i);\n\n        // check for escpaed %%\n        if (str.substr(i, 2) === '%%') {\n            newstr += '%';\n            str = str.substr(i + 2);\n\n            // % followed by number\n        } else if ((match_n = str.substr(i).match(/^%(\\d+)/))) {\n            var arg_n = parseInt(match_n[1]);\n            var length_n = match_n[1].length;\n            if (arg_n > 0 && args[arg_n - 1] !== null && typeof args[arg_n - 1] !== 'undefined')\n                newstr += args[arg_n - 1];\n            str = str.substr(i + 1 + length_n);\n\n            // % followed by some other garbage - just remove the %\n        } else {\n            newstr += '%';\n            str = str.substr(i + 1);\n        }\n    }\n\n    return newstr;\n};\n\n/* instance method wrapper of strargs */\nGettext.prototype.strargs = function(str, args) {\n    return Gettext.strargs(str, args);\n};\n\n/* verify that an object exists and is valid */\nGettext.prototype.isValidObject = function(thisObject) {\n    if (thisObject === null) {\n        return false;\n    } else if (typeof thisObject === 'undefined') {\n        return false;\n    } else {\n        return true;\n    }\n};\n\nmodule.exports = Gettext;\n","/* eslint-disable no-loops/no-loops,no-global-assign,no-console,no-implicit-globals,no-native-reassign */\n\nvar GettextBase = require('./Gettext');\nvar ListFormat = require('./ListFormat');\nvar Substitution = require('./Substitution');\n\nvar recordTranslationForQA = function(translationKey, translatedText, context) {\n    var globalThis;\n    if (typeof window !== 'undefined') {\n        globalThis = window;\n    } else if (typeof global !== 'undefined') {\n        globalThis = global;\n    } else {\n        return;\n    }\n\n    if (!globalThis.INDEED_STRINGS) {\n        globalThis.INDEED_STRINGS = {};\n    }\n\n    if (context) {\n        globalThis.INDEED_STRINGS[\n            context + GettextBase.context_glue + translationKey\n        ] = translatedText;\n    } else {\n        globalThis.INDEED_STRINGS[translationKey] = translatedText;\n    }\n};\n\nvar Gettext = function(localeData, opts) {\n    if (typeof localeData === 'undefined') {\n        console.error(\"Please provide locale data! For example, this['indeed.i18n.localeData']\");\n        if (opts && opts.onError) {\n            opts.onError();\n        }\n    }\n\n    var gt = new GettextBase({\n        domain: 'indeed',\n        locale_data: { indeed: localeData },\n        logger: opts && opts.logger\n    });\n\n    var module = {\n        gettext: function(msgId, args) {\n            var translatedText = gt.gettext(msgId);\n            recordTranslationForQA(msgId, translatedText);\n\n            return args ? Substitution.substitution(translatedText, args) : translatedText;\n        },\n        pgettext: function(msgCtxt, msgId, args) {\n            var translatedText = gt.pgettext(msgCtxt, msgId);\n            recordTranslationForQA(msgId, translatedText, msgCtxt);\n\n            return args ? Substitution.substitution(translatedText, args) : translatedText;\n        },\n        ngettext: function(msgId, msgIdPlural, n, args) {\n            var translatedText = gt.ngettext(msgId, msgIdPlural, n);\n            if (n <= 1) {\n                recordTranslationForQA(msgId, translatedText);\n            } else {\n                recordTranslationForQA(msgIdPlural, translatedText);\n            }\n\n            return args ? Substitution.substitution(translatedText, args) : translatedText;\n        },\n        npgettext: function(msgCtxt, msgId, msgIdPlural, n, args) {\n            var translatedText = gt.npgettext(msgCtxt, msgId, msgIdPlural, n);\n            if (n <= 1) {\n                recordTranslationForQA(msgId, translatedText, msgCtxt);\n            } else {\n                recordTranslationForQA(msgIdPlural, translatedText, msgCtxt);\n            }\n\n            return args ? Substitution.substitution(translatedText, args) : translatedText;\n        },\n        formatlist: function(listFormat, items) {\n            return ListFormat.format(listFormat, items);\n        },\n        getListFormatPattern: function(listFormat, listLength) {\n            return ListFormat.getPattern(listFormat, listLength);\n        }\n    };\n\n    module.split = {\n        gettext: function(msgId, args) {\n            return Substitution.splitSubstitution(module.gettext(msgId), args);\n        },\n        pgettext: function(msgCtxt, msgId, args) {\n            return Substitution.splitSubstitution(module.pgettext(msgCtxt, msgId), args);\n        },\n        ngettext: function(msgId, msgIdPlural, n, args) {\n            return Substitution.splitSubstitution(module.ngettext(msgId, msgIdPlural, n), args);\n        },\n        npgettext: function(msgCtxt, msgId, msgIdPlural, n, args) {\n            return Substitution.splitSubstitution(\n                module.npgettext(msgCtxt, msgId, msgIdPlural, n),\n                args\n            );\n        }\n    };\n\n    return module;\n};\n\nmodule.exports = Gettext;\n","/**\n * by cconnell:\n *\n * This is a piece of the library named Jed.\n *\n * That library contains a plural forms parser, a modified version of which is in this file.\n *\n * This parser is used in GettextBase.js\n */\n\n\n/**\n * @preserve jed.js https://github.com/SlexAxton/Jed\n */\n/*\n-----------\nA gettext compatible i18n library for modern JavaScript Applications\n\nby Alex Sexton - AlexSexton [at] gmail - @SlexAxton\n\nMIT License\n\nA jQuery Foundation project - requires CLA to contribute -\nhttps://contribute.jquery.org/CLA/\n\n\n\nJed offers the entire applicable GNU gettext spec'd set of\nfunctions, but also offers some nicer wrappers around them.\nThe api for gettext was written for a language with no function\noverloading, so Jed allows a little more of that.\n\nMany thanks to Joshua I. Miller - unrtst@cpan.org - who wrote\ngettext.js back in 2008. I was able to vet a lot of my ideas\nagainst his. I also made sure Jed passed against his tests\nin order to offer easy upgrades -- jsgettext.berlios.de\n*/\n\n// Start the Plural forms section\n// This is a full plural form expression parser. It is used to avoid\n// running 'eval' or 'new Function' directly against the plural\n// forms.\n//\n// This can be important if you get translations done through a 3rd\n// party vendor. I encourage you to use this instead, however, I\n// also will provide a 'precompiler' that you can use at build time\n// to output valid/safe function representations of the plural form\n// expressions. This means you can build this code out for the most\n// part.\n\nvar Jed = {};\nJed.PF = {};\n\nJed.PF.parse = function ( p ) {\n    var plural_str = Jed.PF.extractPluralExpr( p );\n    return Jed.PF.parser.parse.call(Jed.PF.parser, plural_str);\n};\n\nJed.PF.compile = function ( p ) {\n    // Handle trues and falses as 0 and 1\n    function imply( val ) {\n        return (val === true ? 1 : val ? val : 0);\n    }\n\n    var ast = Jed.PF.parse( p );\n    return function ( n ) {\n        return imply( Jed.PF.interpreter( ast )( n ) );\n    };\n};\n\nJed.PF.interpreter = function ( ast ) {\n    return function ( n ) {\n        var res;\n        switch ( ast.type ) {\n            case 'GROUP':\n                return Jed.PF.interpreter( ast.expr )( n );\n            case 'TERNARY':\n                if ( Jed.PF.interpreter( ast.expr )( n ) ) {\n                    return Jed.PF.interpreter( ast.truthy )( n );\n                }\n                return Jed.PF.interpreter( ast.falsey )( n );\n            case 'OR':\n                return Jed.PF.interpreter( ast.left )( n ) || Jed.PF.interpreter( ast.right )( n );\n            case 'AND':\n                return Jed.PF.interpreter( ast.left )( n ) && Jed.PF.interpreter( ast.right )( n );\n            case 'LT':\n                return Jed.PF.interpreter( ast.left )( n ) < Jed.PF.interpreter( ast.right )( n );\n            case 'GT':\n                return Jed.PF.interpreter( ast.left )( n ) > Jed.PF.interpreter( ast.right )( n );\n            case 'LTE':\n                return Jed.PF.interpreter( ast.left )( n ) <= Jed.PF.interpreter( ast.right )( n );\n            case 'GTE':\n                return Jed.PF.interpreter( ast.left )( n ) >= Jed.PF.interpreter( ast.right )( n );\n            case 'EQ':\n                return Jed.PF.interpreter( ast.left )( n ) == Jed.PF.interpreter( ast.right )( n );\n            case 'NEQ':\n                return Jed.PF.interpreter( ast.left )( n ) != Jed.PF.interpreter( ast.right )( n );\n            case 'MOD':\n                return Jed.PF.interpreter( ast.left )( n ) % Jed.PF.interpreter( ast.right )( n );\n            case 'VAR':\n                return n;\n            case 'NUM':\n                return ast.val;\n            default:\n                throw new Error(\"Invalid Token found.\");\n        }\n    };\n};\n\nJed.PF.regexps = {\n    TRIM_BEG: /^\\s\\s*/,\n    TRIM_END: /\\s\\s*$/,\n    HAS_SEMICOLON: /;\\s*$/,\n    NPLURALS: /nplurals\\=(\\d+);/,\n    PLURAL: /plural\\=(.*);/\n};\n\nJed.PF.extractPluralExpr = function ( p ) {\n    // trim first\n    p = p.replace(Jed.PF.regexps.TRIM_BEG, '').replace(Jed.PF.regexps.TRIM_END, '');\n\n    if (! Jed.PF.regexps.HAS_SEMICOLON.test(p)) {\n        p = p.concat(';');\n    }\n\n    var nplurals_matches = p.match( Jed.PF.regexps.NPLURALS ),\n        res = {},\n        plural_matches;\n\n    // Find the nplurals number\n    if ( nplurals_matches.length > 1 ) {\n        res.nplurals = nplurals_matches[1];\n    }\n    else {\n        throw new Error('nplurals not found in plural_forms string: ' + p );\n    }\n\n    // remove that data to get to the formula\n    p = p.replace( Jed.PF.regexps.NPLURALS, \"\" );\n    plural_matches = p.match( Jed.PF.regexps.PLURAL );\n\n    if (!( plural_matches && plural_matches.length > 1 ) ) {\n        throw new Error('`plural` expression not found: ' + p);\n    }\n    return plural_matches[ 1 ];\n};\n\n/* Jison generated parser */\nJed.PF.parser = (function(){\n\n    var parser = {trace: function trace() { },\n        yy: {},\n        symbols_: {\"error\":2,\"expressions\":3,\"e\":4,\"EOF\":5,\"?\":6,\":\":7,\"||\":8,\"&&\":9,\"<\":10,\"<=\":11,\">\":12,\">=\":13,\"!=\":14,\"==\":15,\"%\":16,\"(\":17,\")\":18,\"n\":19,\"NUMBER\":20,\"$accept\":0,\"$end\":1},\n        terminals_: {2:\"error\",5:\"EOF\",6:\"?\",7:\":\",8:\"||\",9:\"&&\",10:\"<\",11:\"<=\",12:\">\",13:\">=\",14:\"!=\",15:\"==\",16:\"%\",17:\"(\",18:\")\",19:\"n\",20:\"NUMBER\"},\n        productions_: [0,[3,2],[4,5],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,1],[4,1]],\n        performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {\n\n            var $0 = $$.length - 1;\n            switch (yystate) {\n                case 1: return { type : 'GROUP', expr: $$[$0-1] };\n                    break;\n                case 2:this.$ = { type: 'TERNARY', expr: $$[$0-4], truthy : $$[$0-2], falsey: $$[$0] };\n                    break;\n                case 3:this.$ = { type: \"OR\", left: $$[$0-2], right: $$[$0] };\n                    break;\n                case 4:this.$ = { type: \"AND\", left: $$[$0-2], right: $$[$0] };\n                    break;\n                case 5:this.$ = { type: 'LT', left: $$[$0-2], right: $$[$0] };\n                    break;\n                case 6:this.$ = { type: 'LTE', left: $$[$0-2], right: $$[$0] };\n                    break;\n                case 7:this.$ = { type: 'GT', left: $$[$0-2], right: $$[$0] };\n                    break;\n                case 8:this.$ = { type: 'GTE', left: $$[$0-2], right: $$[$0] };\n                    break;\n                case 9:this.$ = { type: 'NEQ', left: $$[$0-2], right: $$[$0] };\n                    break;\n                case 10:this.$ = { type: 'EQ', left: $$[$0-2], right: $$[$0] };\n                    break;\n                case 11:this.$ = { type: 'MOD', left: $$[$0-2], right: $$[$0] };\n                    break;\n                case 12:this.$ = { type: 'GROUP', expr: $$[$0-1] };\n                    break;\n                case 13:this.$ = { type: 'VAR' };\n                    break;\n                case 14:this.$ = { type: 'NUM', val: Number(yytext) };\n                    break;\n            }\n        },\n        table: [{3:1,4:2,17:[1,3],19:[1,4],20:[1,5]},{1:[3]},{5:[1,6],6:[1,7],8:[1,8],9:[1,9],10:[1,10],11:[1,11],12:[1,12],13:[1,13],14:[1,14],15:[1,15],16:[1,16]},{4:17,17:[1,3],19:[1,4],20:[1,5]},{5:[2,13],6:[2,13],7:[2,13],8:[2,13],9:[2,13],10:[2,13],11:[2,13],12:[2,13],13:[2,13],14:[2,13],15:[2,13],16:[2,13],18:[2,13]},{5:[2,14],6:[2,14],7:[2,14],8:[2,14],9:[2,14],10:[2,14],11:[2,14],12:[2,14],13:[2,14],14:[2,14],15:[2,14],16:[2,14],18:[2,14]},{1:[2,1]},{4:18,17:[1,3],19:[1,4],20:[1,5]},{4:19,17:[1,3],19:[1,4],20:[1,5]},{4:20,17:[1,3],19:[1,4],20:[1,5]},{4:21,17:[1,3],19:[1,4],20:[1,5]},{4:22,17:[1,3],19:[1,4],20:[1,5]},{4:23,17:[1,3],19:[1,4],20:[1,5]},{4:24,17:[1,3],19:[1,4],20:[1,5]},{4:25,17:[1,3],19:[1,4],20:[1,5]},{4:26,17:[1,3],19:[1,4],20:[1,5]},{4:27,17:[1,3],19:[1,4],20:[1,5]},{6:[1,7],8:[1,8],9:[1,9],10:[1,10],11:[1,11],12:[1,12],13:[1,13],14:[1,14],15:[1,15],16:[1,16],18:[1,28]},{6:[1,7],7:[1,29],8:[1,8],9:[1,9],10:[1,10],11:[1,11],12:[1,12],13:[1,13],14:[1,14],15:[1,15],16:[1,16]},{5:[2,3],6:[2,3],7:[2,3],8:[2,3],9:[1,9],10:[1,10],11:[1,11],12:[1,12],13:[1,13],14:[1,14],15:[1,15],16:[1,16],18:[2,3]},{5:[2,4],6:[2,4],7:[2,4],8:[2,4],9:[2,4],10:[1,10],11:[1,11],12:[1,12],13:[1,13],14:[1,14],15:[1,15],16:[1,16],18:[2,4]},{5:[2,5],6:[2,5],7:[2,5],8:[2,5],9:[2,5],10:[2,5],11:[2,5],12:[2,5],13:[2,5],14:[2,5],15:[2,5],16:[1,16],18:[2,5]},{5:[2,6],6:[2,6],7:[2,6],8:[2,6],9:[2,6],10:[2,6],11:[2,6],12:[2,6],13:[2,6],14:[2,6],15:[2,6],16:[1,16],18:[2,6]},{5:[2,7],6:[2,7],7:[2,7],8:[2,7],9:[2,7],10:[2,7],11:[2,7],12:[2,7],13:[2,7],14:[2,7],15:[2,7],16:[1,16],18:[2,7]},{5:[2,8],6:[2,8],7:[2,8],8:[2,8],9:[2,8],10:[2,8],11:[2,8],12:[2,8],13:[2,8],14:[2,8],15:[2,8],16:[1,16],18:[2,8]},{5:[2,9],6:[2,9],7:[2,9],8:[2,9],9:[2,9],10:[2,9],11:[2,9],12:[2,9],13:[2,9],14:[2,9],15:[2,9],16:[1,16],18:[2,9]},{5:[2,10],6:[2,10],7:[2,10],8:[2,10],9:[2,10],10:[2,10],11:[2,10],12:[2,10],13:[2,10],14:[2,10],15:[2,10],16:[1,16],18:[2,10]},{5:[2,11],6:[2,11],7:[2,11],8:[2,11],9:[2,11],10:[2,11],11:[2,11],12:[2,11],13:[2,11],14:[2,11],15:[2,11],16:[2,11],18:[2,11]},{5:[2,12],6:[2,12],7:[2,12],8:[2,12],9:[2,12],10:[2,12],11:[2,12],12:[2,12],13:[2,12],14:[2,12],15:[2,12],16:[2,12],18:[2,12]},{4:30,17:[1,3],19:[1,4],20:[1,5]},{5:[2,2],6:[1,7],7:[2,2],8:[1,8],9:[1,9],10:[1,10],11:[1,11],12:[1,12],13:[1,13],14:[1,14],15:[1,15],16:[1,16],18:[2,2]}],\n        defaultActions: {6:[2,1]},\n        parseError: function parseError(str, hash) {\n            throw new Error(str);\n        },\n        parse: function parse(input) {\n            var self = this,\n                stack = [0],\n                vstack = [null], // semantic value stack\n                lstack = [], // location stack\n                table = this.table,\n                yytext = '',\n                yylineno = 0,\n                yyleng = 0,\n                recovering = 0,\n                TERROR = 2,\n                EOF = 1;\n\n            //this.reductionCount = this.shiftCount = 0;\n\n            this.lexer.setInput(input);\n            this.lexer.yy = this.yy;\n            this.yy.lexer = this.lexer;\n            if (typeof this.lexer.yylloc == 'undefined')\n                this.lexer.yylloc = {};\n            var yyloc = this.lexer.yylloc;\n            lstack.push(yyloc);\n\n            if (typeof this.yy.parseError === 'function')\n                this.parseError = this.yy.parseError;\n\n            function popStack (n) {\n                stack.length = stack.length - 2*n;\n                vstack.length = vstack.length - n;\n                lstack.length = lstack.length - n;\n            }\n\n            function lex() {\n                var token;\n                token = self.lexer.lex() || 1; // $end = 1\n                // if token isn't its numeric value, convert\n                if (typeof token !== 'number') {\n                    token = self.symbols_[token] || token;\n                }\n                return token;\n            }\n\n            var symbol, preErrorSymbol, state, action, a, r, yyval={},p,len,newState, expected;\n            while (true) {\n                // retreive state number from top of stack\n                state = stack[stack.length-1];\n\n                // use default actions if available\n                if (this.defaultActions[state]) {\n                    action = this.defaultActions[state];\n                } else {\n                    if (symbol == null)\n                        symbol = lex();\n                    // read action for current state and first input\n                    action = table[state] && table[state][symbol];\n                }\n\n                // handle parse error\n                _handle_error:\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n\n                        if (!recovering) {\n                            // Report error\n                            expected = [];\n                            for (p in table[state]) if (this.terminals_[p] && p > 2) {\n                                expected.push(\"'\"+this.terminals_[p]+\"'\");\n                            }\n                            var errStr = '';\n                            if (this.lexer.showPosition) {\n                                errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+this.lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + this.terminals_[symbol]+ \"'\";\n                            } else {\n                                errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\n                                    (symbol == 1 /*EOF*/ ? \"end of input\" :\n                                        (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\n                            }\n                            this.parseError(errStr,\n                                {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});\n                        }\n\n                        // just recovered from another error\n                        if (recovering == 3) {\n                            if (symbol == EOF) {\n                                throw new Error(errStr || 'Parsing halted.');\n                            }\n\n                            // discard current lookahead and grab another\n                            yyleng = this.lexer.yyleng;\n                            yytext = this.lexer.yytext;\n                            yylineno = this.lexer.yylineno;\n                            yyloc = this.lexer.yylloc;\n                            symbol = lex();\n                        }\n\n                        // try to recover from error\n                        while (1) {\n                            // check for error recovery rule in this state\n                            if ((TERROR.toString()) in table[state]) {\n                                break;\n                            }\n                            if (state == 0) {\n                                throw new Error(errStr || 'Parsing halted.');\n                            }\n                            popStack(1);\n                            state = stack[stack.length-1];\n                        }\n\n                        preErrorSymbol = symbol; // save the lookahead token\n                        symbol = TERROR;         // insert generic error symbol as new lookahead\n                        state = stack[stack.length-1];\n                        action = table[state] && table[state][TERROR];\n                        recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\n                    }\n\n                // this shouldn't happen, unless resolve defaults are off\n                if (action[0] instanceof Array && action.length > 1) {\n                    throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\n                }\n\n                switch (action[0]) {\n\n                    case 1: // shift\n                        //this.shiftCount++;\n\n                        stack.push(symbol);\n                        vstack.push(this.lexer.yytext);\n                        lstack.push(this.lexer.yylloc);\n                        stack.push(action[1]); // push state\n                        symbol = null;\n                        if (!preErrorSymbol) { // normal execution/no error\n                            yyleng = this.lexer.yyleng;\n                            yytext = this.lexer.yytext;\n                            yylineno = this.lexer.yylineno;\n                            yyloc = this.lexer.yylloc;\n                            if (recovering > 0)\n                                recovering--;\n                        } else { // error just occurred, resume old lookahead f/ before error\n                            symbol = preErrorSymbol;\n                            preErrorSymbol = null;\n                        }\n                        break;\n\n                    case 2: // reduce\n                        //this.reductionCount++;\n\n                        len = this.productions_[action[1]][1];\n\n                        // perform semantic action\n                        yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\n                        // default location, uses first token for firsts, last for lasts\n                        yyval._$ = {\n                            first_line: lstack[lstack.length-(len||1)].first_line,\n                            last_line: lstack[lstack.length-1].last_line,\n                            first_column: lstack[lstack.length-(len||1)].first_column,\n                            last_column: lstack[lstack.length-1].last_column\n                        };\n                        r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);\n\n                        if (typeof r !== 'undefined') {\n                            return r;\n                        }\n\n                        // pop off stack\n                        if (len) {\n                            stack = stack.slice(0,-1*len*2);\n                            vstack = vstack.slice(0, -1*len);\n                            lstack = lstack.slice(0, -1*len);\n                        }\n\n                        stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\n                        vstack.push(yyval.$);\n                        lstack.push(yyval._$);\n                        // goto new state = table[STATE][NONTERMINAL]\n                        newState = table[stack[stack.length-2]][stack[stack.length-1]];\n                        stack.push(newState);\n                        break;\n\n                    case 3: // accept\n                        return true;\n                }\n\n            }\n\n            return true;\n        }};/* Jison generated lexer */\n    var lexer = (function(){\n\n        var lexer = ({EOF:1,\n            parseError:function parseError(str, hash) {\n                if (this.yy.parseError) {\n                    this.yy.parseError(str, hash);\n                } else {\n                    throw new Error(str);\n                }\n            },\n            setInput:function (input) {\n                this._input = input;\n                this._more = this._less = this.done = false;\n                this.yylineno = this.yyleng = 0;\n                this.yytext = this.matched = this.match = '';\n                this.conditionStack = ['INITIAL'];\n                this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};\n                return this;\n            },\n            input:function () {\n                var ch = this._input[0];\n                this.yytext+=ch;\n                this.yyleng++;\n                this.match+=ch;\n                this.matched+=ch;\n                var lines = ch.match(/\\n/);\n                if (lines) this.yylineno++;\n                this._input = this._input.slice(1);\n                return ch;\n            },\n            unput:function (ch) {\n                this._input = ch + this._input;\n                return this;\n            },\n            more:function () {\n                this._more = true;\n                return this;\n            },\n            pastInput:function () {\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\n                return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n            },\n            upcomingInput:function () {\n                var next = this.match;\n                if (next.length < 20) {\n                    next += this._input.substr(0, 20-next.length);\n                }\n                return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\\n/g, \"\");\n            },\n            showPosition:function () {\n                var pre = this.pastInput();\n                var c = new Array(pre.length + 1).join(\"-\");\n                return pre + this.upcomingInput() + \"\\n\" + c+\"^\";\n            },\n            next:function () {\n                if (this.done) {\n                    return this.EOF;\n                }\n                if (!this._input) this.done = true;\n\n                var token,\n                    match,\n                    col,\n                    lines;\n                if (!this._more) {\n                    this.yytext = '';\n                    this.match = '';\n                }\n                var rules = this._currentRules();\n                for (var i=0;i < rules.length; i++) {\n                    match = this._input.match(this.rules[rules[i]]);\n                    if (match) {\n                        lines = match[0].match(/\\n.*/g);\n                        if (lines) this.yylineno += lines.length;\n                        this.yylloc = {first_line: this.yylloc.last_line,\n                            last_line: this.yylineno+1,\n                            first_column: this.yylloc.last_column,\n                            last_column: lines ? lines[lines.length-1].length-1 : this.yylloc.last_column + match[0].length}\n                        this.yytext += match[0];\n                        this.match += match[0];\n                        this.matches = match;\n                        this.yyleng = this.yytext.length;\n                        this._more = false;\n                        this._input = this._input.slice(match[0].length);\n                        this.matched += match[0];\n                        token = this.performAction.call(this, this.yy, this, rules[i],this.conditionStack[this.conditionStack.length-1]);\n                        if (token) return token;\n                        else return;\n                    }\n                }\n                if (this._input === \"\") {\n                    return this.EOF;\n                } else {\n                    this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\\n'+this.showPosition(),\n                        {text: \"\", token: null, line: this.yylineno});\n                }\n            },\n            lex:function lex() {\n                var r = this.next();\n                if (typeof r !== 'undefined') {\n                    return r;\n                } else {\n                    return this.lex();\n                }\n            },\n            begin:function begin(condition) {\n                this.conditionStack.push(condition);\n            },\n            popState:function popState() {\n                return this.conditionStack.pop();\n            },\n            _currentRules:function _currentRules() {\n                return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;\n            },\n            topState:function () {\n                return this.conditionStack[this.conditionStack.length-2];\n            },\n            pushState:function begin(condition) {\n                this.begin(condition);\n            }});\n        lexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\n\n            var YYSTATE=YY_START;\n            switch($avoiding_name_collisions) {\n                case 0:/* skip whitespace */\n                    break;\n                case 1:return 20\n                    break;\n                case 2:return 19\n                    break;\n                case 3:return 8\n                    break;\n                case 4:return 9\n                    break;\n                case 5:return 6\n                    break;\n                case 6:return 7\n                    break;\n                case 7:return 11\n                    break;\n                case 8:return 13\n                    break;\n                case 9:return 10\n                    break;\n                case 10:return 12\n                    break;\n                case 11:return 14\n                    break;\n                case 12:return 15\n                    break;\n                case 13:return 16\n                    break;\n                case 14:return 17\n                    break;\n                case 15:return 18\n                    break;\n                case 16:return 5\n                    break;\n                case 17:return 'INVALID'\n                    break;\n            }\n        };\n        lexer.rules = [/^\\s+/,/^[0-9]+(\\.[0-9]+)?\\b/,/^n\\b/,/^\\|\\|/,/^&&/,/^\\?/,/^:/,/^<=/,/^>=/,/^</,/^>/,/^!=/,/^==/,/^%/,/^\\(/,/^\\)/,/^$/,/^./];\n        lexer.conditions = {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],\"inclusive\":true}};return lexer;})()\n    parser.lexer = lexer;\n    return parser;\n})();\n// End parser\n\nmodule.exports = Jed;","/**\n * Formats a variable-length list.\n *\n * For example: [\"milk\", \"eggs\", \"cheese\"] => \"milk, eggs, and cheese\"\n *\n * In order to format a list, you must define four translations:\n *     listStart: \"{0}, {1}\"\n *     listMiddle: \"{0}, {1}\"\n *     listEnd: \"{0}, and {1}\"\n *     twoItemList: \"{0} and {1}\"\n *\n * These four translations can be combined to format a list of any length.\n * This approach allows translators to customize the format per-language.\n * If different messages need to be displayed in different formats, you can create multiple ListFormats backed by different translations.\n */\nvar Substitution = require('./Substitution');\n\nmodule.exports = {\n    format: function(listFormat, items) {\n        if (items.length === 0) {\n            return '';\n        }\n        if (items.length === 1) {\n            return items[0];\n        }\n        if (items.length === 2) {\n            return Substitution.substitution(listFormat.twoItemList, items);\n        }\n\n        var current = Substitution.substitution(listFormat.listStart, [items[0], items[1]]);\n        for (var index = 2; index < items.length - 1; index++) {\n            current = Substitution.splitSubstitution(listFormat.listMiddle, [\n                current,\n                items[index]\n            ]).join('');\n        }\n\n        return Substitution.splitSubstitution(listFormat.listEnd, [\n            current,\n            items[items.length - 1]\n        ]).join('');\n    },\n    getPattern: function(listFormat, listLength) {\n        var items = [];\n        for (var i = 0; i < listLength; i++) {\n            items.push('{' + i + '}');\n        }\n\n        return this.format(listFormat, items);\n    }\n};\n","module.exports = {\n    substitution: function(str, args) {\n        if (args instanceof Array) {\n            for (var i = 0, j = args.length; i < j; i++) {\n                // disable the special replacement patterns\n                var escapedArg = args[i].toString().replace(new RegExp('\\\\$', 'g'), '$$$$');\n                var pattern = new RegExp('\\\\{' + i + '\\\\}', 'g');\n                str = str.replace(pattern, escapedArg);\n            }\n        } else {\n            // disable the special replacement patterns\n            var escapedArgs = args.toString().replace(new RegExp('\\\\$', 'g'), '$$$$');\n            str = str.replace(/\\{0\\}/g, escapedArgs);\n        }\n\n        // Server-side passes parameterized strings through MessageFormat which\n        // requires that the source use double-apostrophes to mean single apostrophe.\n        // Client-side replacement doesn't have this restriction, so we remove them here.\n        return str.replace(/''/g, \"'\");\n    },\n    splitSubstitution: function(str, args) {\n        if (str === '') {\n            return [''];\n        }\n        if (!Array.isArray(args)) {\n            args = [args];\n        }\n\n        return str\n            .split(/({\\d+})/)\n            .filter(function(part) {\n                // If there is a match at the beginning or end of the string,\n                // split adds an empty string to the array.\n                // So filter out these empty strings.\n                return part !== '';\n            })\n            .map(function(part) {\n                // Check whether or not this part is an argument substitution string\n                var match = part.match(/^{(\\d+)}$/);\n                if (match === null) {\n                    return part;\n                }\n\n                var argumentIndex = parseInt(match[1], 10);\n                if (argumentIndex >= args.length) {\n                    return part;\n                }\n\n                return args[argumentIndex];\n            });\n    }\n};\n"],"names":["module","exports","stringhash","str","salt","hash","i","length","charCodeAt","Jed","require","DefaultLogger","this","error","Gettext","args","domain","input_locale_data","undefined","locale_data","options","validatedOptions","isValidObject","j","logger","try_parse_locale_data","context_glue","prototype","parse_locale_data","JSON","parse","stringify","hasOwnProperty","has_msgids","msgid","data","head","msgs","optimized_format","message_id","header","h","toLowerCase","concat","plural_func","plural_forms","RegExp","test","Error","pf","PF","compile","gettext","dcnpgettext","msgctxt","msgid_plural","n","category","dgettext","dcgettext","ngettext","dngettext","dcngettext","pgettext","dpgettext","dcpgettext","npgettext","dnpgettext","english_message_plural","english_message","plural","domainname","push","dom","domain_used","trans","found","locale","message_hash","String","substring","id_length","slice","p","translation","strargs","constructor","Array","newstr","match_n","indexOf","substr","match","arg_n","parseInt","length_n","thisObject","GettextBase","ListFormat","Substitution","recordTranslationForQA","translationKey","translatedText","context","globalThis","window","global","INDEED_STRINGS","localeData","opts","onError","gt","indeed","msgId","substitution","msgCtxt","msgIdPlural","formatlist","listFormat","items","format","getListFormatPattern","listLength","getPattern","split","splitSubstitution","parser","lexer","plural_str","extractPluralExpr","call","ast","val","interpreter","type","expr","truthy","falsey","left","right","regexps","TRIM_BEG","TRIM_END","HAS_SEMICOLON","NPLURALS","PLURAL","replace","plural_matches","nplurals_matches","trace","yy","symbols_","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","$","Number","table","defaultActions","parseError","input","self","stack","vstack","lstack","recovering","setInput","yylloc","yyloc","lex","token","symbol","preErrorSymbol","state","action","r","len","newState","expected","yyval","errStr","showPosition","join","text","line","loc","toString","first_line","last_line","first_column","last_column","EOF","_input","_more","_less","done","matched","conditionStack","ch","unput","more","pastInput","past","upcomingInput","next","pre","c","lines","rules","_currentRules","matches","begin","condition","popState","pop","conditions","topState","pushState","yy_","$avoiding_name_collisions","YY_START","twoItemList","current","listStart","index","listMiddle","listEnd","escapedArg","pattern","escapedArgs","isArray","filter","part","map","argumentIndex"],"sourceRoot":""}